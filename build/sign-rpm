#!/usr/bin/env ruby
require "open3"
require "pty"
require "shellwords"

module Process
  def exist?(pid)
    Process.kill(0, pid)
    true
  rescue Errno::ESRCH
    false
  end

  module_function :exist?
end

rpm_cmd, *rpm_args = ARGV

unless (rpm_cmd)
  STDERR.puts 'Usage: sign-rpm RPM_COMMAND'
  exit 1
end

password = "passphrase_here"
cmd = [rpm_cmd].concat(rpm_args)

puts cmd.inspect
puts Shellwords.join(cmd)

PTY.spawn(Shellwords.join(cmd)) do |r, w, pid|
  prompt = r.read(19)

  # match the expected prompt exactly, since that's the only way we know if
  # something went wrong.
  unless prompt == 'Enter pass phrase: '
    STDERR.puts "unexpected output from `#{rpm_cmd}`: '#{prompt}'"
    Process.kill(:KILL, pid)
    exit 1
  end

  #STDOUT.puts prompt
  w.write("#{password}\n")

  # Keep printing output until the command exits
  loop do
    begin
      line = r.gets
      puts line
      if (line =~ /failed/) && !(line =~ /warning:/)
        STDERR.puts 'RPM signing failure'
        exit 1
      end
    rescue Errno::EIO
      break
    end
  end
end
